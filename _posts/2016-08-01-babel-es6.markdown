---
layout:     post
title:      "es6 十大特性"
subtitle:   "用着就是爽"
date:       2016-8-01 12:00:00
author:     "Guolei"
header-img: ""
header-mask: 0.3
catalog:    true
tags:
    - es6
    - babel
---

> ES6(ECMAScript 6)是即将到来的新版本JavaScript语言的标准

## 箭头函数

```js
var arr =['guolei','guanxi','nimei'];

传统做法
arr.forEach(function(v,i){v = 'hello '+v;console.log(v)})

es6
arr.forEach((v,i)=>{v='hello '+v; console.log(v)})

```
简洁直接

## class

之前保存了class的关键字，现在终于用上了

```
class Person {
  //ES6中新型构造器
    constructor(name) {
        this.name = name;
    }
    //实例方法
    sayName() {
        console.log('My name is '+this.name);
    }
}
//类的继承
class Manong extends Person {
    constructor(name) {
      //直接调用父类构造器进行初始化
        super(name);
    }
    program() {
        console.log("I'm coding...");
    }
}
//测试我们的类
var ren =new Person('dummy'),
wayou= new Manong('wayou');
animal.sayName();//输出 ‘My name is dummy’
wayou.sayName();//输出 ‘My name is wayou’
wayou.program();//输出 ‘I'm coding...’

```

用class实现继承和原型链相比，一个直观，一个方便，各有优点吧。






es6虽然强大，无奈大多数浏览器都无法兼容，不过办法总比问题多，babel让你的代码插上es6的翅膀，更具逼格


## 安装

```js
# ES2015转码规则
$ npm install --save-dev babel-preset-es2015

# react转码规则
$ npm install --save-dev babel-preset-react
```

项目根目录添加配置文件 .babelrc (很重要)

```
{
    "presets": [
      "es2015",
      "react"
    ],
    "plugins": []
}
```

.babelrc

## 运行

新建自己的项目仓库

```
mkdir babel-demo
git init
npm init
```

安装babel命令行工具

```js
npm install --global babel-cli
```

新建一个example.js

```js
[1,2,3].map(n => n + 1);
```
example.js

**执行**

babel example.js

执行结果输出在命令行
![](http://www.qinguolei.com/img/in-post/babel/babel-example.jpeg)


如果想输出到指定文件

```js
babel example.js -o compiled.js
```

当然我们一般是批量转化

```js
babel src -d lib
```
将src里面的多有代码转化为es5并保存到lib文件夹中


![](http://www.qinguolei.com/img/in-post/babel/babel-lib.jpeg)

然而目前的操作都是在全局下进行的，依赖性太强，我们需要把它放到项目中

```js
npm install --save-dev babel-cli
```

改写package.json

```
{
  "scripts": {
    "build": "babel src -d lib"
  },
}
```

这样编译只需要执行

```js
npm run build
```

当然如果嫌麻烦，可以在线转化
[babel在线转化网址](https://babeljs.io/repl/)



代码地址：[github](https://github.com/thunderqin/babel-demo)

### 著作权声明

本文主要参照了[一峰](http://www.ruanyifeng.com/blog/2016/01/babel.html)老师的博客，感谢老师
